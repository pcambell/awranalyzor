# Generated by Django 4.2.16 on 2025-06-02 07:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('awr_upload', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceBaseline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_comment='性能基线的名称', max_length=100, verbose_name='基线名称')),
                ('description', models.TextField(blank=True, db_comment='基线的详细描述', null=True, verbose_name='基线描述')),
                ('oracle_version', models.CharField(blank=True, db_comment='适用的Oracle版本', max_length=20, null=True, verbose_name='Oracle版本')),
                ('instance_pattern', models.CharField(blank=True, db_comment='适用的实例名称模式（支持通配符）', max_length=100, null=True, verbose_name='实例模式')),
                ('environment_type', models.CharField(blank=True, choices=[('production', '生产环境'), ('test', '测试环境'), ('development', '开发环境'), ('staging', '预发布环境')], db_comment='适用的环境类型', max_length=50, null=True, verbose_name='环境类型')),
                ('baseline_metrics', models.JSONField(db_comment='基线的各项性能指标数据', default=dict, verbose_name='基线指标')),
                ('is_active', models.BooleanField(db_comment='基线是否处于激活状态', default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='基线创建时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='基线最后更新时间', verbose_name='更新时间')),
                ('created_by', models.ForeignKey(db_comment='创建此基线的用户', on_delete=django.db.models.deletion.CASCADE, related_name='created_baselines', to=settings.AUTH_USER_MODEL, verbose_name='创建用户')),
            ],
            options={
                'verbose_name': '性能基线',
                'verbose_name_plural': '性能基线',
                'db_table': 'awranalyzer_performance_baseline',
                'db_table_comment': '性能基线表',
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_category', models.CharField(choices=[('load_profile', '负载概要'), ('instance_efficiency', '实例效率'), ('wait_events', '等待事件'), ('sql_statistics', 'SQL统计'), ('memory_statistics', '内存统计'), ('io_statistics', 'IO统计'), ('system_statistics', '系统统计'), ('time_model', '时间模型'), ('rac_statistics', 'RAC统计')], db_comment='性能指标的分类', max_length=50, verbose_name='指标分类')),
                ('metric_name', models.CharField(db_comment='性能指标的具体名称', max_length=100, verbose_name='指标名称')),
                ('metric_unit', models.CharField(blank=True, db_comment='指标的计量单位，如次/秒、MB、%等', max_length=50, null=True, verbose_name='指标单位')),
                ('value', models.DecimalField(db_comment='指标的数值', decimal_places=6, max_digits=20, verbose_name='指标值')),
                ('per_second', models.DecimalField(blank=True, db_comment='指标的每秒平均值', decimal_places=6, max_digits=20, null=True, verbose_name='每秒平均值')),
                ('per_transaction', models.DecimalField(blank=True, db_comment='指标的每事务平均值', decimal_places=6, max_digits=20, null=True, verbose_name='每事务平均值')),
                ('percentage', models.DecimalField(blank=True, db_comment='指标的百分比值', decimal_places=3, max_digits=6, null=True, verbose_name='百分比')),
                ('rank', models.PositiveSmallIntegerField(blank=True, db_comment='在同类指标中的排名', null=True, verbose_name='排名')),
                ('total_wait_time', models.DecimalField(blank=True, db_comment='总等待时间（秒）', decimal_places=6, max_digits=20, null=True, verbose_name='总等待时间')),
                ('avg_wait_time', models.DecimalField(blank=True, db_comment='平均等待时间（毫秒）', decimal_places=6, max_digits=20, null=True, verbose_name='平均等待时间')),
                ('context_info', models.JSONField(blank=True, db_comment='存储额外的上下文数据，如SQL_ID、对象名等', default=dict, verbose_name='上下文信息')),
                ('baseline_value', models.DecimalField(blank=True, db_comment='该指标的基准值', decimal_places=6, max_digits=20, null=True, verbose_name='基准值')),
                ('warning_threshold', models.DecimalField(blank=True, db_comment='指标的警告阈值', decimal_places=6, max_digits=20, null=True, verbose_name='警告阈值')),
                ('critical_threshold', models.DecimalField(blank=True, db_comment='指标的严重问题阈值', decimal_places=6, max_digits=20, null=True, verbose_name='严重阈值')),
                ('status', models.CharField(choices=[('normal', '正常'), ('warning', '警告'), ('critical', '严重'), ('unknown', '未知')], db_comment='基于阈值的指标状态评估', default='unknown', max_length=20, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='指标记录创建时间', verbose_name='创建时间')),
                ('awr_report', models.ForeignKey(db_comment='关联的AWR报告', on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='awr_upload.awrreport', verbose_name='AWR报告')),
            ],
            options={
                'verbose_name': '性能指标',
                'verbose_name_plural': '性能指标',
                'db_table': 'awranalyzer_performance_metric',
                'db_table_comment': '性能指标表',
                'indexes': [models.Index(fields=['awr_report', 'metric_category'], name='awranalyzer_awr_rep_bd956b_idx'), models.Index(fields=['metric_category', 'metric_name'], name='awranalyzer_metric__cb3212_idx'), models.Index(fields=['status'], name='awranalyzer_status_e41826_idx'), models.Index(fields=['rank'], name='awranalyzer_rank_ab59a7_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='performancemetric',
            constraint=models.UniqueConstraint(fields=('awr_report', 'metric_category', 'metric_name'), name='unique_metric_per_report'),
        ),
        migrations.AddIndex(
            model_name='performancebaseline',
            index=models.Index(fields=['oracle_version'], name='awranalyzer_oracle__4cb68b_idx'),
        ),
        migrations.AddIndex(
            model_name='performancebaseline',
            index=models.Index(fields=['environment_type'], name='awranalyzer_environ_1961e9_idx'),
        ),
        migrations.AddIndex(
            model_name='performancebaseline',
            index=models.Index(fields=['is_active'], name='awranalyzer_is_acti_7170b6_idx'),
        ),
    ]
