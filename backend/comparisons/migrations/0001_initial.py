# Generated by Django 4.2.16 on 2025-06-02 07:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('awr_upload', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_comment='用户定义的对比分析名称', max_length=200, verbose_name='对比名称')),
                ('description', models.TextField(blank=True, db_comment='对比分析的详细描述', null=True, verbose_name='对比描述')),
                ('comparison_type', models.CharField(choices=[('full', '全面对比'), ('performance', '性能对比'), ('wait_events', '等待事件对比'), ('sql_analysis', 'SQL分析对比'), ('resource_usage', '资源使用对比'), ('custom', '自定义对比')], db_comment='对比分析的类型', default='full', max_length=50, verbose_name='对比类型')),
                ('comparison_scope', models.JSONField(blank=True, db_comment='指定的对比指标范围', default=list, verbose_name='对比范围')),
                ('overall_assessment', models.CharField(blank=True, choices=[('improved', '性能改善'), ('degraded', '性能下降'), ('stable', '性能稳定'), ('mixed', '有升有降'), ('inconclusive', '无明确结论')], db_comment='对比的总体性能评估结果', max_length=50, null=True, verbose_name='总体评估')),
                ('improvement_score', models.DecimalField(blank=True, db_comment='性能改善评分（-100到100，正数表示改善）', decimal_places=2, max_digits=6, null=True, verbose_name='改善评分')),
                ('key_differences', models.JSONField(blank=True, db_comment='对比中发现的关键性能差异', default=list, verbose_name='关键差异')),
                ('significant_changes', models.JSONField(blank=True, db_comment='显著的性能指标变化', default=list, verbose_name='显著变化')),
                ('metric_comparisons', models.JSONField(blank=True, db_comment='详细的指标对比数据', default=dict, verbose_name='指标对比')),
                ('wait_event_comparisons', models.JSONField(blank=True, db_comment='等待事件的对比分析', default=dict, verbose_name='等待事件对比')),
                ('sql_comparisons', models.JSONField(blank=True, db_comment='SQL性能的对比分析', default=dict, verbose_name='SQL对比')),
                ('comparison_config', models.JSONField(blank=True, db_comment='对比分析的配置参数', default=dict, verbose_name='对比配置')),
                ('threshold_settings', models.JSONField(blank=True, db_comment='判断显著变化的阈值设置', default=dict, verbose_name='阈值设置')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('processing', '处理中'), ('completed', '已完成'), ('failed', '失败')], db_comment='对比分析的处理状态', default='pending', max_length=20, verbose_name='处理状态')),
                ('error_message', models.TextField(blank=True, db_comment='处理失败时的错误信息', null=True, verbose_name='错误信息')),
                ('progress_percentage', models.PositiveSmallIntegerField(db_comment='对比处理的进度百分比', default=0, verbose_name='进度百分比')),
                ('is_shared', models.BooleanField(db_comment='对比结果是否与其他用户共享', default=False, verbose_name='是否共享')),
                ('tags', models.JSONField(blank=True, db_comment='用户定义的对比标签', default=list, verbose_name='标签')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='对比记录创建时间', verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='对比记录最后更新时间', verbose_name='更新时间')),
                ('completed_at', models.DateTimeField(blank=True, db_comment='对比分析完成时间', null=True, verbose_name='完成时间')),
                ('baseline_report', models.ForeignKey(db_comment='作为基准的AWR报告', on_delete=django.db.models.deletion.CASCADE, related_name='baseline_comparisons', to='awr_upload.awrreport', verbose_name='基准报告')),
                ('created_by', models.ForeignKey(db_comment='创建此对比的用户', on_delete=django.db.models.deletion.CASCADE, related_name='created_comparisons', to=settings.AUTH_USER_MODEL, verbose_name='创建用户')),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_comparisons', to=settings.AUTH_USER_MODEL, verbose_name='共享用户')),
                ('target_report', models.ForeignKey(db_comment='被对比的AWR报告', on_delete=django.db.models.deletion.CASCADE, related_name='target_comparisons', to='awr_upload.awrreport', verbose_name='目标报告')),
            ],
            options={
                'verbose_name': '报告对比',
                'verbose_name_plural': '报告对比',
                'db_table': 'awranalyzer_report_comparison',
                'db_table_comment': '报告对比表',
                'indexes': [models.Index(fields=['created_by', 'created_at'], name='awranalyzer_created_15c0b4_idx'), models.Index(fields=['status'], name='awranalyzer_status_917c6b_idx'), models.Index(fields=['comparison_type'], name='awranalyzer_compari_fff9f6_idx'), models.Index(fields=['baseline_report'], name='awranalyzer_baselin_f06dd0_idx'), models.Index(fields=['target_report'], name='awranalyzer_target__4da57e_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='reportcomparison',
            constraint=models.CheckConstraint(check=models.Q(('baseline_report', models.F('target_report')), _negated=True), name='different_reports_only'),
        ),
    ]
